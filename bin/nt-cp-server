#!/usr/bin/env ruby

require 'optparse'
require 'rack'
require 'rack/cors'
require 'content-preview/router'

options = {
  server: 'WEBrick',
  port: '3210',
  origin: '*',
  action: 'start'
}

optparser = OptionParser.new do |opts|
  opts.banner = 'Usage: nt-cp-server --start -p PORT'

  opts.on '-r', '--start', 'Start server' do
    options[:action] = 'start'
  end

  opts.on '-s', '--server', 'Server Type to use' do |s|
    options[:server] = s
  end

  opts.on '-p', '--port', 'Port to use' do |p|
    options[:port] = p
  end

  opts.on '-o', '--origin', 'Origins to allow XHRs from' do |o|
    options[:origin] = o
  end
end

if options[:action] == 'start'
  origin, port, server = options[:origin], options[:port], options[:server]
  service = Rack::Builder.new do
    use Rack::CommonLogger
    # use Rack::ShowExceptions
    # use Rack::Lint

    use Rack::Cors do
     allow do
      origins origin
      resource %r{/},
        :headers => ['Origin', 'Accept', 'Content-Type'],
        :methods => [:get, :post]
     end
    end

    run ContentPreview::Router::Base
  end

  Rack::Handler.const_get(server).run(service, Host: '0.0.0.0', Port: port)
end